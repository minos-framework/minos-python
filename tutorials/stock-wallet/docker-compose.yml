version: '3.9'
volumes:
  postgres: {}
  zookeeper: {}
  kafka: {}
  redis: {}
services:
  postgres:
    restart: always
    build: external/postgres
    command: postgres -c 'max_connections=200'
    ports:
    - 5432:5432
    volumes:
    - postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: minos
      POSTGRES_PASSWORD: min0s
  zookeeper:
    restart: always
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
  kafka:
    restart: always
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  discovery:
    restart: always
    build: external/discovery
    ports:
    - '5567'
    depends_on:
    - redis
    environment:
      DISCOVERY_SERVICE_DB_HOST: redis
  redis:
    restart: always
    image: redis:latest
    volumes:
    - redis:/data
  apigateway:
    restart: always
    build: external/apigateway
    ports:
    - 5566:5566
    depends_on:
    - discovery
    environment:
      PYTHONPATH: /api_gateway
      DISCOVERY_SERVICE_HOST: discovery
      API_GATEWAY_DISCOVERY_HOST: discovery
  microservice-wallet:
    restart: always
    build:
      context: microservices/wallet
      target: development
    environment: &id001
      MINOS_BROKER_QUEUE_HOST: postgres
      MINOS_BROKER_HOST: kafka
      MINOS_REPOSITORY_HOST: postgres
      MINOS_SNAPSHOT_HOST: postgres
      MINOS_DISCOVERY_HOST: discovery
    depends_on: &id002
    - postgres
    - kafka
    - discovery
  microservice-stocks:
    restart: always
    build:
      context: microservices/stocks
      target: development
    environment: *id001
    depends_on: *id002
  microservice-crypto:
    restart: always
    build:
      context: microservices/crypto
      target: development
    environment: *id001
    depends_on: *id002
x-microservice-environment: *id001
x-microservice-depends-on: *id002
