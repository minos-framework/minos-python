service:
  name: payment
  aggregate: src.aggregates.Payment
  injections:
    lock_pool: minos.common.PostgreSqlLockPool
    postgresql_pool: minos.common.PostgreSqlPool
    broker_publisher: minos.plugins.kafka.InMemoryQueuedKafkaBrokerPublisher
    broker_subscriber_builder: minos.plugins.kafka.InMemoryQueuedKafkaBrokerSubscriberBuilder
    broker_pool: minos.networks.BrokerClientPool
    transaction_repository: minos.aggregate.PostgreSqlTransactionRepository
    event_repository: minos.aggregate.PostgreSqlEventRepository
    snapshot_repository: minos.aggregate.PostgreSqlSnapshotRepository
    payment_repository: src.PaymentQueryServiceRepository
    saga_manager: minos.saga.SagaManager
    discovery: minos.networks.DiscoveryConnector
  services:
    - minos.networks.BrokerHandlerService
    - minos.networks.RestService
    - minos.networks.PeriodicTaskSchedulerService
middleware:
  - minos.saga.transactional_command
services:
  - minos.aggregate.TransactionService
  - minos.aggregate.SnapshotService
  - minos.saga.SagaService
  - src.queries.PaymentQueryService
  - src.commands.PaymentCommandService
rest:
  host: 0.0.0.0
  port: 8080
broker:
  host: localhost
  port: 9092
  queue:
    database: payment_db
    user: minos
    password: min0s
    host: localhost
    port: 5432
    records: 1000
    retry: 2
repository:
  database: payment_db
  user: minos
  password: min0s
  host: localhost
  port: 5432
query_repository:
  database: payment_query_db
  user: minos
  password: min0s
  host: localhost
  port: 5432
snapshot:
  database: payment_db
  user: minos
  password: min0s
  host: localhost
  port: 5432
saga:
  storage:
    path: ./payment.lmdb
discovery:
  client: minos.plugins.minos_discovery.MinosDiscoveryClient
  host: localhost
  port: 5567