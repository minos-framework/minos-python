version: '3.9'

x-kong-config: &kong-env
  KONG_DATABASE: postgres
  KONG_PG_DATABASE: kong
  KONG_PG_HOST: db
  KONG_PG_USER: kong
  KONG_PG_PASSWORD: kong

volumes:
  kong_data: {}
  konga_data:
  kong_prefix_vol:
    driver_opts:
     type: tmpfs
     device: tmpfs
  kong_tmp_vol:
    driver_opts:
     type: tmpfs
     device: tmpfs

services:
  kong-migrations:
    image: kong/kong-gateway:2.8.0.0-alpine
    command: kong migrations bootstrap
    depends_on:
      - db
    environment:
        KONG_DATABASE: postgres
        KONG_PG_DATABASE: kong
        KONG_PG_HOST: db
        KONG_PG_USER: kong
        KONG_PG_PASSWORD: kong
    restart: on-failure

  kong-migrations-up:
    image: kong/kong-gateway:2.8.0.0-alpine
    command: kong migrations up && kong migrations finish
    depends_on:
      - db
    environment:
        KONG_DATABASE: postgres
        KONG_PG_DATABASE: kong
        KONG_PG_HOST: db
        KONG_PG_USER: kong
        KONG_PG_PASSWORD: kong
    restart: on-failure

  kong:
    image: kong/kong-gateway:2.8.0.0-alpine
    user: kong
    environment:
      KONG_DATABASE: postgres
      KONG_PG_DATABASE: kong
      KONG_PG_HOST: db
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_PROXY_LISTEN: 0.0.0.0:8000
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_PREFIX: /var/run/kong
      KONG_LOG_LEVEL: debug
      KONG_DECLARATIVE_CONFIG: "/opt/kong/kong.yaml"
    ports:
      - "0.0.0.0:8000:8000/tcp"
      - "0.0.0.0:8443:8443/tcp"
      - "127.0.0.1:8001:8001/tcp"
      - "127.0.0.1:8444:8444/tcp"
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure:5
    read_only: true
    volumes:
      - kong_prefix_vol:/var/run/kong
      - kong_tmp_vol:/tmp
      - ./config:/opt/kong
    security_opt:
      - no-new-privileges

  db:
    image: postgres:9.5
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: kong
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: on-failure
    stdin_open: true
    tty: true
    volumes:
      - kong_data:/var/lib/postgresql/data

  konga:
      image: pantsel/konga
      ports:
          - 1337:1337
      links:
          - kong:kong
      container_name: konga
      #networks:
      #    - kong-net
      environment:
          - NODE_ENV=production
